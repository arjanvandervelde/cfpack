name: Docker Hub

on:
  release:
    types:
      - published

jobs:
  publish:
    name: Publish Image
    runs-on: ubuntu-latest
    if: github.event.action == 'published'
    steps:
      - uses: actions/checkout@v2
      - uses: docker/setup-qemu-action@v1
      - uses: docker/setup-buildx-action@v1
      - uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
      - uses: docker/login-action@v1 
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_ACCESS_TOKEN }}
      - name: prepare
        id: prep
        env:
          CFPACK_VERSION: ${{ github.event.release.name }}
        run: |
          VERSION=${CFPACK_VERSION}
          TAGS="${{ secrets.DOCKER_IMAGE }}:latest"
          TAGS="$TAGS,${{ secrets.DOCKER_IMAGE }}:${CFPACK_VERSION}"
          TAGS="$TAGS,${{ secrets.DOCKER_IMAGE }}:${CFPACK_VERSION%%.*}"

          echo "::set-output name=version::${VERSION}"
          echo "::set-output name=tags::${TAGS}"
          echo "::set-output name=created::$(date -u +'%Y-%m-%dT%H:%M:%SZ')"
      - uses: docker/build-push-action@v2
        with:
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
          push: true
          context: ./docker
          file: ./docker/Dockerfile
          tags: ${{ steps.prep.outputs.tags }}
          labels: |
            org.opencontainers.image.title=${{ github.event.repository.name }}
            org.opencontainers.image.description=${{ github.event.repository.description }}
            org.opencontainers.image.url=${{ github.event.repository.html_url }}
            org.opencontainers.image.source=${{ github.event.repository.clone_url }}
            org.opencontainers.image.version=${{ steps.prep.outputs.version }}
            org.opencontainers.image.created=${{ steps.prep.outputs.created }}
            org.opencontainers.image.revision=${{ github.sha }}
            org.opencontainers.image.licenses=${{ github.event.repository.license.spdx_id }}
